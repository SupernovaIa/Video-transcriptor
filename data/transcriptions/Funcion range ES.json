{
  "text": " Vamos a ver la función range de acuerdo que es una de las funciones que tienen incorporadas Python para los bookles 4, ¿de acuerdo? Entonces lo primero que vamos a hacer como siempre con el costumbre es generar un nuevo Jupyter Notebook, vamos a poder funciones, ¿de acuerdo? Ya tenemos nuestro Jupyter creado y entonces la función range lo que va a hacer es generar una secuencia en números enteros, ¿de acuerdo? Esta secuencia la vamos a poder utilizar para crear una lista de números o para iterar en un booklet 4, ¿de acuerdo? Entonces la syntaxis es la siguiente, vamos a hacer range de un star, oi range de star, stop, stop, ¿de acuerdo? Vamos a fijarnos en esto, esto que acabamos de escribir, ¿de acuerdo? Es la syntaxis completa de nuestra función, el star representará el inicio de estos índices de esta secuencia de números que vamos a querer generar, el stop será el final de la secuencia de números que vamos a querer crear y el step serán los pasos que vamos a querer darle a esta secuencia de números de esta forma, podremos decirle por ejemplo que me generen una secuencia de números consecutivos que empiecen desde el cero hasta el día tomados de dos en dos, ¿de acuerdo? Entonces vamos a empezar con algo sencillo, ¿qué hace el range cuando le ponemos solamente el start? ¿De acuerdo? Lo hemos dicho que esto es una función de grada de Python para los booklets 4, entonces 4, elemento in range de acuerdo y vamos a ponerle, yo dice, 10 por ejemplo, ¿de acuerdo? Y vamos a printear cada uno de los elementos, ¿a acuerdo? Muy bien, acabamos de generar una secuencia numérica de enteros, de 10 elementos, empezando por el cero siempre, ¿de acuerdo? Pero 1, 2, 3, 4, tiene 9, ¿de acuerdo? ¿Nos dos 10 elementos? Muy bien, como decían de verdad, start stop step, ahora lo que vamos a hacer es exactamente lo mismo, por elemento in range de esta vez voy a empezar desde el 1, ¿de acuerdo? Hasta 10 y vamos a printerar estos elementos, Prín elemento, pun, ¿cómo podemos observar? ¿Donde han des empezado en el cero? ¿vale? Ahora empiezan el 1 y acaban el 9, ¿de acuerdo? Por lo tanto el range va a contener hasta el elemento stop menos 1, de esta forma, si yo quiero que obtener una secuencia de números consecutivos hasta el 10, del 1 al 10, tendré que poner aquí 1, ¿de acuerdo? Genial, ¿vale? Y ahora que vamos a hacer, vamos a probar el step, ¿de acuerdo? Vamos a hacer el elemento, vamos a generar una serie de elementos que estén contenidos desde el 1 hasta el 10, ¿de acuerdo? ¿de acuerdo? Tomados de 2 en 2, ¿de acuerdo? Entonces empezarán el 1, 1, el 2 no lo coge, el 3, el 4 no lo coge, el 5, el 6 no lo coge, el 7, ya sí hasta el final. Claro, estamos pensando como que, oye, a lo mejor yo quiero generar una secuencia de números pares, ¿verdad? Vamos a probar, si yo quiero hacer, generar unos números de 1 al 10 y que mojo coja los elementos pares, una posible solución sería decirle, oye, empieza el 0, acaba en el 11 y toma los de 2 en 2, el 1, elementos, ¿de acuerdo? Ojalá el 0 también, 0, 2, 4, 6, 8 y 10, entonces si esta manera ya tendríamos elementos pares del 0 al 10. Pongamos que ahora queremos almacenar estos valores en una lista. Vamos a generar primero una lista de números vacíos, 4, elemento, y en range. Voy a copiar exactamente lo mismo que hoy en la Zelda anterior, ¿de acuerdo? Hasta el 10 y tomamos de 2 en 2, ¿de acuerdo? Y ahora lo único que tengo que hacer es agregar cada uno de estos elementos a la lista de números, maldita sea, lo único que tengo que hacer es invocar a la lista de números, apendear el que, pues que a uno de los elementos por los cuales estoy iterando, vamos a mirar si efectivamente lista de números, continúa los números pares, y así tendríamos, habríamos generado una lista de números pares, muy bien, y con esto ya terminamos con esta parte del range, una cosa que puede ser muy interesante para iterar por ejemplo por diccionarios, o generar simplemente una secuencia de números enteros.",
  "segments": [
    {
      "id": 0,
      "seek": 0,
      "start": 0.0,
      "end": 14.0,
      "text": " Vamos a ver la función range de acuerdo que es una de las funciones que tienen incorporadas",
      "tokens": [
        50364,
        10894,
        257,
        1306,
        635,
        43735,
        3613,
        368,
        28113,
        631,
        785,
        2002,
        368,
        2439,
        1019,
        23469,
        631,
        12536,
        8788,
        6872,
        51064
      ],
      "temperature": 0.0,
      "avg_logprob": -0.42206925286187064,
      "compression_ratio": 1.3237410071942446,
      "no_speech_prob": 0.05415860563516617
    },
    {
      "id": 1,
      "seek": 0,
      "start": 14.0,
      "end": 19.76,
      "text": " Python para los bookles 4, ¿de acuerdo? Entonces lo primero que vamos a hacer como siempre",
      "tokens": [
        51064,
        15329,
        1690,
        1750,
        1446,
        904,
        1017,
        11,
        3841,
        1479,
        28113,
        30,
        15097,
        450,
        21289,
        631,
        5295,
        257,
        6720,
        2617,
        12758,
        51352
      ],
      "temperature": 0.0,
      "avg_logprob": -0.42206925286187064,
      "compression_ratio": 1.3237410071942446,
      "no_speech_prob": 0.05415860563516617
    },
    {
      "id": 2,
      "seek": 1976,
      "start": 19.76,
      "end": 31.520000000000003,
      "text": " con el costumbre es generar un nuevo Jupyter Notebook, vamos a poder funciones, ¿de acuerdo? Ya",
      "tokens": [
        50364,
        416,
        806,
        2063,
        449,
        2672,
        785,
        1337,
        289,
        517,
        18591,
        22125,
        88,
        391,
        11633,
        2939,
        11,
        5295,
        257,
        8152,
        1019,
        23469,
        11,
        3841,
        1479,
        28113,
        30,
        6080,
        50952
      ],
      "temperature": 0.0,
      "avg_logprob": -0.23178633157309,
      "compression_ratio": 1.6067415730337078,
      "no_speech_prob": 0.004345878958702087
    },
    {
      "id": 3,
      "seek": 1976,
      "start": 31.520000000000003,
      "end": 40.52,
      "text": " tenemos nuestro Jupyter creado y entonces la función range lo que va a hacer es generar una",
      "tokens": [
        50952,
        9914,
        14726,
        22125,
        88,
        391,
        1197,
        1573,
        288,
        13003,
        635,
        43735,
        3613,
        450,
        631,
        2773,
        257,
        6720,
        785,
        1337,
        289,
        2002,
        51402
      ],
      "temperature": 0.0,
      "avg_logprob": -0.23178633157309,
      "compression_ratio": 1.6067415730337078,
      "no_speech_prob": 0.004345878958702087
    },
    {
      "id": 4,
      "seek": 1976,
      "start": 40.52,
      "end": 46.6,
      "text": " secuencia en números enteros, ¿de acuerdo? Esta secuencia la vamos a poder utilizar para crear",
      "tokens": [
        51402,
        907,
        47377,
        465,
        36545,
        3242,
        329,
        11,
        3841,
        1479,
        28113,
        30,
        20547,
        907,
        47377,
        635,
        5295,
        257,
        8152,
        24060,
        1690,
        31984,
        51706
      ],
      "temperature": 0.0,
      "avg_logprob": -0.23178633157309,
      "compression_ratio": 1.6067415730337078,
      "no_speech_prob": 0.004345878958702087
    },
    {
      "id": 5,
      "seek": 4660,
      "start": 46.6,
      "end": 52.72,
      "text": " una lista de números o para iterar en un booklet 4, ¿de acuerdo? Entonces la syntaxis es la siguiente,",
      "tokens": [
        50364,
        2002,
        27764,
        368,
        36545,
        277,
        1690,
        17138,
        289,
        465,
        517,
        1446,
        2631,
        1017,
        11,
        3841,
        1479,
        28113,
        30,
        15097,
        635,
        28431,
        271,
        785,
        635,
        25666,
        11,
        50670
      ],
      "temperature": 0.0,
      "avg_logprob": -0.33351329115570566,
      "compression_ratio": 1.4507042253521127,
      "no_speech_prob": 0.0022054887376725674
    },
    {
      "id": 6,
      "seek": 4660,
      "start": 52.72,
      "end": 69.48,
      "text": " vamos a hacer range de un star, oi range de star, stop, stop, ¿de acuerdo? Vamos a fijarnos en esto,",
      "tokens": [
        50670,
        5295,
        257,
        6720,
        3613,
        368,
        517,
        3543,
        11,
        277,
        72,
        3613,
        368,
        3543,
        11,
        1590,
        11,
        1590,
        11,
        3841,
        1479,
        28113,
        30,
        10894,
        257,
        42001,
        24979,
        465,
        7433,
        11,
        51508
      ],
      "temperature": 0.0,
      "avg_logprob": -0.33351329115570566,
      "compression_ratio": 1.4507042253521127,
      "no_speech_prob": 0.0022054887376725674
    },
    {
      "id": 7,
      "seek": 6948,
      "start": 69.48,
      "end": 78.16,
      "text": " esto que acabamos de escribir, ¿de acuerdo? Es la syntaxis completa de nuestra función, el star",
      "tokens": [
        50364,
        7433,
        631,
        13281,
        2151,
        368,
        30598,
        10119,
        11,
        3841,
        1479,
        28113,
        30,
        2313,
        635,
        28431,
        271,
        46822,
        368,
        16825,
        43735,
        11,
        806,
        3543,
        50798
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1710369110107422,
      "compression_ratio": 1.8826530612244898,
      "no_speech_prob": 0.011443248018622398
    },
    {
      "id": 8,
      "seek": 6948,
      "start": 78.16,
      "end": 85.56,
      "text": " representará el inicio de estos índices de esta secuencia de números que vamos a querer",
      "tokens": [
        50798,
        2906,
        21534,
        806,
        294,
        18322,
        368,
        12585,
        18645,
        273,
        1473,
        368,
        5283,
        907,
        47377,
        368,
        36545,
        631,
        5295,
        257,
        39318,
        51168
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1710369110107422,
      "compression_ratio": 1.8826530612244898,
      "no_speech_prob": 0.011443248018622398
    },
    {
      "id": 9,
      "seek": 6948,
      "start": 85.56,
      "end": 91.0,
      "text": " generar, el stop será el final de la secuencia de números que vamos a querer crear y el step",
      "tokens": [
        51168,
        1337,
        289,
        11,
        806,
        1590,
        16502,
        806,
        2572,
        368,
        635,
        907,
        47377,
        368,
        36545,
        631,
        5295,
        257,
        39318,
        31984,
        288,
        806,
        1823,
        51440
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1710369110107422,
      "compression_ratio": 1.8826530612244898,
      "no_speech_prob": 0.011443248018622398
    },
    {
      "id": 10,
      "seek": 6948,
      "start": 91.0,
      "end": 97.44,
      "text": " serán los pasos que vamos a querer darle a esta secuencia de números de esta forma,",
      "tokens": [
        51440,
        816,
        7200,
        1750,
        1736,
        329,
        631,
        5295,
        257,
        39318,
        37666,
        257,
        5283,
        907,
        47377,
        368,
        36545,
        368,
        5283,
        8366,
        11,
        51762
      ],
      "temperature": 0.0,
      "avg_logprob": -0.1710369110107422,
      "compression_ratio": 1.8826530612244898,
      "no_speech_prob": 0.011443248018622398
    },
    {
      "id": 11,
      "seek": 9744,
      "start": 97.44,
      "end": 103.84,
      "text": " podremos decirle por ejemplo que me generen una secuencia de números consecutivos que empiecen",
      "tokens": [
        50364,
        2497,
        28343,
        10235,
        306,
        1515,
        13358,
        631,
        385,
        1337,
        268,
        2002,
        907,
        47377,
        368,
        36545,
        27154,
        16501,
        631,
        4012,
        414,
        13037,
        50684
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2959770307148973,
      "compression_ratio": 1.481283422459893,
      "no_speech_prob": 0.004652311094105244
    },
    {
      "id": 12,
      "seek": 9744,
      "start": 103.84,
      "end": 110.0,
      "text": " desde el cero hasta el día tomados de dos en dos, ¿de acuerdo? Entonces vamos a empezar con algo",
      "tokens": [
        50684,
        10188,
        806,
        269,
        2032,
        10764,
        806,
        12271,
        2916,
        4181,
        368,
        4491,
        465,
        4491,
        11,
        3841,
        1479,
        28113,
        30,
        15097,
        5295,
        257,
        31168,
        416,
        8655,
        50992
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2959770307148973,
      "compression_ratio": 1.481283422459893,
      "no_speech_prob": 0.004652311094105244
    },
    {
      "id": 13,
      "seek": 9744,
      "start": 110.0,
      "end": 115.6,
      "text": " sencillo, ¿qué hace el range cuando le ponemos solamente el start? ¿De acuerdo?",
      "tokens": [
        50992,
        46749,
        78,
        11,
        3841,
        16412,
        10032,
        806,
        3613,
        7767,
        476,
        9224,
        4485,
        27814,
        806,
        722,
        30,
        3841,
        11089,
        28113,
        30,
        51272
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2959770307148973,
      "compression_ratio": 1.481283422459893,
      "no_speech_prob": 0.004652311094105244
    },
    {
      "id": 14,
      "seek": 11560,
      "start": 116.55999999999999,
      "end": 122.88,
      "text": " Lo hemos dicho que esto es una función de grada de Python para los booklets 4, entonces 4,",
      "tokens": [
        50412,
        6130,
        15396,
        27346,
        631,
        7433,
        785,
        2002,
        43735,
        368,
        2771,
        64,
        368,
        15329,
        1690,
        1750,
        1446,
        12541,
        1017,
        11,
        13003,
        1017,
        11,
        50728
      ],
      "temperature": 0.0,
      "avg_logprob": -0.3979147425237692,
      "compression_ratio": 1.3055555555555556,
      "no_speech_prob": 0.07091425359249115
    },
    {
      "id": 15,
      "seek": 11560,
      "start": 122.88,
      "end": 137.84,
      "text": " elemento in range de acuerdo y vamos a ponerle, yo dice, 10 por ejemplo, ¿de acuerdo? Y vamos a",
      "tokens": [
        50728,
        47961,
        294,
        3613,
        368,
        28113,
        288,
        5295,
        257,
        19149,
        306,
        11,
        5290,
        10313,
        11,
        1266,
        1515,
        13358,
        11,
        3841,
        1479,
        28113,
        30,
        398,
        5295,
        257,
        51476
      ],
      "temperature": 0.0,
      "avg_logprob": -0.3979147425237692,
      "compression_ratio": 1.3055555555555556,
      "no_speech_prob": 0.07091425359249115
    },
    {
      "id": 16,
      "seek": 13784,
      "start": 137.84,
      "end": 152.68,
      "text": " printear cada uno de los elementos, ¿a acuerdo? Muy bien, acabamos de generar una secuencia",
      "tokens": [
        50364,
        582,
        12401,
        289,
        8411,
        8526,
        368,
        1750,
        35797,
        11,
        3841,
        64,
        28113,
        30,
        39586,
        3610,
        11,
        13281,
        2151,
        368,
        1337,
        289,
        2002,
        907,
        47377,
        51106
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2854639584900903,
      "compression_ratio": 1.3496503496503496,
      "no_speech_prob": 0.0128237409517169
    },
    {
      "id": 17,
      "seek": 13784,
      "start": 152.68,
      "end": 160.96,
      "text": " numérica de enteros, de 10 elementos, empezando por el cero siempre, ¿de acuerdo? Pero 1, 2, 3, 4,",
      "tokens": [
        51106,
        1031,
        32716,
        368,
        3242,
        329,
        11,
        368,
        1266,
        35797,
        11,
        18730,
        1806,
        1515,
        806,
        269,
        2032,
        12758,
        11,
        3841,
        1479,
        28113,
        30,
        9377,
        502,
        11,
        568,
        11,
        805,
        11,
        1017,
        11,
        51520
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2854639584900903,
      "compression_ratio": 1.3496503496503496,
      "no_speech_prob": 0.0128237409517169
    },
    {
      "id": 18,
      "seek": 16096,
      "start": 160.96,
      "end": 168.96,
      "text": " tiene 9, ¿de acuerdo? ¿Nos dos 10 elementos? Muy bien, como decían de verdad, start stop step,",
      "tokens": [
        50364,
        7066,
        1722,
        11,
        3841,
        1479,
        28113,
        30,
        3841,
        45,
        329,
        4491,
        1266,
        35797,
        30,
        39586,
        3610,
        11,
        2617,
        979,
        11084,
        368,
        13692,
        11,
        722,
        1590,
        1823,
        11,
        50764
      ],
      "temperature": 0.0,
      "avg_logprob": -0.41696979381419996,
      "compression_ratio": 1.304635761589404,
      "no_speech_prob": 0.005629200022667646
    },
    {
      "id": 19,
      "seek": 16096,
      "start": 168.96,
      "end": 179.84,
      "text": " ahora lo que vamos a hacer es exactamente lo mismo, por elemento in range de esta vez voy a empezar",
      "tokens": [
        50764,
        9923,
        450,
        631,
        5295,
        257,
        6720,
        785,
        48686,
        450,
        12461,
        11,
        1515,
        47961,
        294,
        3613,
        368,
        5283,
        5715,
        7552,
        257,
        31168,
        51308
      ],
      "temperature": 0.0,
      "avg_logprob": -0.41696979381419996,
      "compression_ratio": 1.304635761589404,
      "no_speech_prob": 0.005629200022667646
    },
    {
      "id": 20,
      "seek": 17984,
      "start": 180.4,
      "end": 189.88,
      "text": " desde el 1, ¿de acuerdo? Hasta 10 y vamos a printerar estos elementos,",
      "tokens": [
        50392,
        10188,
        806,
        502,
        11,
        3841,
        1479,
        28113,
        30,
        45027,
        1266,
        288,
        5295,
        257,
        582,
        5106,
        289,
        12585,
        35797,
        11,
        50866
      ],
      "temperature": 0.0,
      "avg_logprob": -0.4392514365059989,
      "compression_ratio": 1.358974358974359,
      "no_speech_prob": 0.019064195454120636
    },
    {
      "id": 21,
      "seek": 17984,
      "start": 191.72,
      "end": 197.44,
      "text": " Prín elemento, pun, ¿cómo podemos observar?",
      "tokens": [
        50958,
        2114,
        10973,
        47961,
        11,
        4468,
        11,
        3841,
        46614,
        12234,
        9951,
        289,
        30,
        51244
      ],
      "temperature": 0.0,
      "avg_logprob": -0.4392514365059989,
      "compression_ratio": 1.358974358974359,
      "no_speech_prob": 0.019064195454120636
    },
    {
      "id": 22,
      "seek": 17984,
      "start": 198.7,
      "end": 208.68,
      "text": " ¿Donde han des empezado en el cero? ¿vale? Ahora empiezan el 1 y acaban el 9, ¿de acuerdo?",
      "tokens": [
        51307,
        3841,
        35,
        7259,
        7276,
        730,
        18730,
        1573,
        465,
        806,
        269,
        2032,
        30,
        3841,
        46583,
        30,
        18840,
        4012,
        18812,
        282,
        806,
        502,
        288,
        13281,
        282,
        806,
        1722,
        11,
        3841,
        1479,
        28113,
        30,
        51806
      ],
      "temperature": 0.0,
      "avg_logprob": -0.4392514365059989,
      "compression_ratio": 1.358974358974359,
      "no_speech_prob": 0.019064195454120636
    },
    {
      "id": 23,
      "seek": 20868,
      "start": 208.68,
      "end": 217.8,
      "text": " Por lo tanto el range va a contener hasta el elemento stop menos 1, de esta forma, si yo quiero que",
      "tokens": [
        50364,
        5269,
        450,
        10331,
        806,
        3613,
        2773,
        257,
        660,
        7971,
        10764,
        806,
        47961,
        1590,
        8902,
        502,
        11,
        368,
        5283,
        8366,
        11,
        1511,
        5290,
        16811,
        631,
        50820
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2886186275842055,
      "compression_ratio": 1.4,
      "no_speech_prob": 0.0035365894436836243
    },
    {
      "id": 24,
      "seek": 20868,
      "start": 217.8,
      "end": 226.68,
      "text": " obtener una secuencia de números consecutivos hasta el 10, del 1 al 10, tendré que poner aquí",
      "tokens": [
        50820,
        28326,
        260,
        2002,
        907,
        47377,
        368,
        36545,
        27154,
        16501,
        10764,
        806,
        1266,
        11,
        1103,
        502,
        419,
        1266,
        11,
        3928,
        10521,
        631,
        19149,
        6661,
        51264
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2886186275842055,
      "compression_ratio": 1.4,
      "no_speech_prob": 0.0035365894436836243
    },
    {
      "id": 25,
      "seek": 22668,
      "start": 226.68,
      "end": 238.44,
      "text": " 1, ¿de acuerdo? Genial, ¿vale? Y ahora que vamos a hacer, vamos a probar el step, ¿de acuerdo?",
      "tokens": [
        50364,
        502,
        11,
        3841,
        1479,
        28113,
        30,
        3632,
        831,
        11,
        3841,
        46583,
        30,
        398,
        9923,
        631,
        5295,
        257,
        6720,
        11,
        5295,
        257,
        1239,
        289,
        806,
        1823,
        11,
        3841,
        1479,
        28113,
        30,
        50952
      ],
      "temperature": 0.0,
      "avg_logprob": -0.38134147274878716,
      "compression_ratio": 1.4928571428571429,
      "no_speech_prob": 0.055867236107587814
    },
    {
      "id": 26,
      "seek": 22668,
      "start": 238.44,
      "end": 252.0,
      "text": " Vamos a hacer el elemento, vamos a generar una serie de elementos que estén contenidos desde el 1 hasta el 10,",
      "tokens": [
        50952,
        10894,
        257,
        6720,
        806,
        47961,
        11,
        5295,
        257,
        1337,
        289,
        2002,
        23030,
        368,
        35797,
        631,
        871,
        3516,
        21795,
        7895,
        10188,
        806,
        502,
        10764,
        806,
        1266,
        11,
        51630
      ],
      "temperature": 0.0,
      "avg_logprob": -0.38134147274878716,
      "compression_ratio": 1.4928571428571429,
      "no_speech_prob": 0.055867236107587814
    },
    {
      "id": 27,
      "seek": 25200,
      "start": 252.0,
      "end": 267.24,
      "text": " ¿de acuerdo? ¿de acuerdo? Tomados de 2 en 2, ¿de acuerdo? Entonces empezarán el 1,",
      "tokens": [
        50364,
        3841,
        1479,
        28113,
        30,
        3841,
        1479,
        28113,
        30,
        5041,
        4181,
        368,
        568,
        465,
        568,
        11,
        3841,
        1479,
        28113,
        30,
        15097,
        31168,
        7200,
        806,
        502,
        11,
        51126
      ],
      "temperature": 0.0,
      "avg_logprob": -0.39578385188661774,
      "compression_ratio": 1.2463768115942029,
      "no_speech_prob": 0.008488927036523819
    },
    {
      "id": 28,
      "seek": 26724,
      "start": 267.24,
      "end": 280.40000000000003,
      "text": " 1, el 2 no lo coge, el 3, el 4 no lo coge, el 5, el 6 no lo coge, el 7, ya sí hasta el final.",
      "tokens": [
        50364,
        502,
        11,
        806,
        568,
        572,
        450,
        598,
        432,
        11,
        806,
        805,
        11,
        806,
        1017,
        572,
        450,
        598,
        432,
        11,
        806,
        1025,
        11,
        806,
        1386,
        572,
        450,
        598,
        432,
        11,
        806,
        1614,
        11,
        2478,
        8600,
        10764,
        806,
        2572,
        13,
        51022
      ],
      "temperature": 0.0,
      "avg_logprob": -0.247363061615915,
      "compression_ratio": 1.4573643410852712,
      "no_speech_prob": 0.13388825953006744
    },
    {
      "id": 29,
      "seek": 26724,
      "start": 284.92,
      "end": 292.64,
      "text": " Claro, estamos pensando como que, oye, a lo mejor yo quiero generar una secuencia de números",
      "tokens": [
        51248,
        33380,
        11,
        10382,
        34525,
        2617,
        631,
        11,
        277,
        1200,
        11,
        257,
        450,
        11479,
        5290,
        16811,
        1337,
        289,
        2002,
        907,
        47377,
        368,
        36545,
        51634
      ],
      "temperature": 0.0,
      "avg_logprob": -0.247363061615915,
      "compression_ratio": 1.4573643410852712,
      "no_speech_prob": 0.13388825953006744
    },
    {
      "id": 30,
      "seek": 29264,
      "start": 292.64,
      "end": 307.96,
      "text": " pares, ¿verdad? Vamos a probar, si yo quiero hacer, generar unos números de 1 al 10 y que",
      "tokens": [
        50364,
        2502,
        495,
        11,
        3841,
        331,
        20034,
        30,
        10894,
        257,
        1239,
        289,
        11,
        1511,
        5290,
        16811,
        6720,
        11,
        1337,
        289,
        17780,
        36545,
        368,
        502,
        419,
        1266,
        288,
        631,
        51130
      ],
      "temperature": 0.0,
      "avg_logprob": -0.29470795079281453,
      "compression_ratio": 1.2517482517482517,
      "no_speech_prob": 0.06314907222986221
    },
    {
      "id": 31,
      "seek": 29264,
      "start": 307.96,
      "end": 313.96,
      "text": " mojo coja los elementos pares, una posible solución sería decirle, oye, empieza el 0,",
      "tokens": [
        51130,
        705,
        5134,
        598,
        2938,
        1750,
        35797,
        2502,
        495,
        11,
        2002,
        26644,
        24807,
        5687,
        23679,
        10235,
        306,
        11,
        277,
        1200,
        11,
        44577,
        806,
        1958,
        11,
        51430
      ],
      "temperature": 0.0,
      "avg_logprob": -0.29470795079281453,
      "compression_ratio": 1.2517482517482517,
      "no_speech_prob": 0.06314907222986221
    },
    {
      "id": 32,
      "seek": 31396,
      "start": 313.96,
      "end": 332.79999999999995,
      "text": " acaba en el 11 y toma los de 2 en 2, el 1, elementos, ¿de acuerdo? Ojalá el 0 también, 0, 2, 4, 6, 8 y 10,",
      "tokens": [
        50364,
        23485,
        465,
        806,
        2975,
        288,
        39728,
        1750,
        368,
        568,
        465,
        568,
        11,
        806,
        502,
        11,
        35797,
        11,
        3841,
        1479,
        28113,
        30,
        422,
        22600,
        842,
        806,
        1958,
        6407,
        11,
        1958,
        11,
        568,
        11,
        1017,
        11,
        1386,
        11,
        1649,
        288,
        1266,
        11,
        51306
      ],
      "temperature": 0.0,
      "avg_logprob": -0.37549548990586223,
      "compression_ratio": 1.314102564102564,
      "no_speech_prob": 0.043309640139341354
    },
    {
      "id": 33,
      "seek": 31396,
      "start": 332.79999999999995,
      "end": 341.03999999999996,
      "text": " entonces si esta manera ya tendríamos elementos pares del 0 al 10. Pongamos que ahora queremos",
      "tokens": [
        51306,
        13003,
        1511,
        5283,
        13913,
        2478,
        3928,
        81,
        16275,
        35797,
        2502,
        495,
        1103,
        1958,
        419,
        1266,
        13,
        430,
        556,
        2151,
        631,
        9923,
        26813,
        51718
      ],
      "temperature": 0.0,
      "avg_logprob": -0.37549548990586223,
      "compression_ratio": 1.314102564102564,
      "no_speech_prob": 0.043309640139341354
    },
    {
      "id": 34,
      "seek": 34104,
      "start": 341.04,
      "end": 359.0,
      "text": " almacenar estos valores en una lista. Vamos a generar primero una lista de números vacíos,",
      "tokens": [
        50364,
        18667,
        326,
        268,
        289,
        12585,
        38790,
        465,
        2002,
        27764,
        13,
        10894,
        257,
        1337,
        289,
        21289,
        2002,
        27764,
        368,
        36545,
        2842,
        870,
        329,
        11,
        51262
      ],
      "temperature": 0.0,
      "avg_logprob": -0.2533329857720269,
      "compression_ratio": 1.108433734939759,
      "no_speech_prob": 0.09251723438501358
    },
    {
      "id": 35,
      "seek": 35900,
      "start": 359.0,
      "end": 370.56,
      "text": " 4, elemento, y en range. Voy a copiar exactamente lo mismo que hoy en la Zelda anterior, ¿de acuerdo?",
      "tokens": [
        50364,
        1017,
        11,
        47961,
        11,
        288,
        465,
        3613,
        13,
        25563,
        257,
        2971,
        9448,
        48686,
        450,
        12461,
        631,
        13775,
        465,
        635,
        25298,
        22272,
        11,
        3841,
        1479,
        28113,
        30,
        50942
      ],
      "temperature": 0.0,
      "avg_logprob": -0.30532958290793677,
      "compression_ratio": 1.640625,
      "no_speech_prob": 0.09118939191102982
    },
    {
      "id": 36,
      "seek": 35900,
      "start": 370.56,
      "end": 379.32,
      "text": " Hasta el 10 y tomamos de 2 en 2, ¿de acuerdo? Y ahora lo único que tengo que hacer es agregar cada uno",
      "tokens": [
        50942,
        45027,
        806,
        1266,
        288,
        2916,
        2151,
        368,
        568,
        465,
        568,
        11,
        3841,
        1479,
        28113,
        30,
        398,
        9923,
        450,
        26113,
        631,
        13989,
        631,
        6720,
        785,
        4554,
        2976,
        8411,
        8526,
        51380
      ],
      "temperature": 0.0,
      "avg_logprob": -0.30532958290793677,
      "compression_ratio": 1.640625,
      "no_speech_prob": 0.09118939191102982
    },
    {
      "id": 37,
      "seek": 35900,
      "start": 379.32,
      "end": 385.88,
      "text": " de estos elementos a la lista de números, maldita sea, lo único que tengo que hacer es invocar a la lista",
      "tokens": [
        51380,
        368,
        12585,
        35797,
        257,
        635,
        27764,
        368,
        36545,
        11,
        2806,
        67,
        2786,
        4158,
        11,
        450,
        26113,
        631,
        13989,
        631,
        6720,
        785,
        1048,
        47993,
        257,
        635,
        27764,
        51708
      ],
      "temperature": 0.0,
      "avg_logprob": -0.30532958290793677,
      "compression_ratio": 1.640625,
      "no_speech_prob": 0.09118939191102982
    },
    {
      "id": 38,
      "seek": 38588,
      "start": 385.88,
      "end": 393.64,
      "text": " de números, apendear el que, pues que a uno de los elementos por los cuales estoy iterando,",
      "tokens": [
        50364,
        368,
        36545,
        11,
        1882,
        5445,
        289,
        806,
        631,
        11,
        11059,
        631,
        257,
        8526,
        368,
        1750,
        35797,
        1515,
        1750,
        46932,
        15796,
        17138,
        1806,
        11,
        50752
      ],
      "temperature": 0.0,
      "avg_logprob": -0.25508709696980264,
      "compression_ratio": 1.6764705882352942,
      "no_speech_prob": 0.06471599638462067
    },
    {
      "id": 39,
      "seek": 38588,
      "start": 395.04,
      "end": 401.44,
      "text": " vamos a mirar si efectivamente lista de números, continúa los números pares, y así tendríamos,",
      "tokens": [
        50822,
        5295,
        257,
        3149,
        289,
        1511,
        22565,
        23957,
        27764,
        368,
        36545,
        11,
        1421,
        46362,
        1750,
        36545,
        2502,
        495,
        11,
        288,
        8582,
        3928,
        81,
        16275,
        11,
        51142
      ],
      "temperature": 0.0,
      "avg_logprob": -0.25508709696980264,
      "compression_ratio": 1.6764705882352942,
      "no_speech_prob": 0.06471599638462067
    },
    {
      "id": 40,
      "seek": 38588,
      "start": 401.44,
      "end": 408.92,
      "text": " habríamos generado una lista de números pares, muy bien, y con esto ya terminamos con esta",
      "tokens": [
        51142,
        32794,
        16275,
        1337,
        1573,
        2002,
        27764,
        368,
        36545,
        2502,
        495,
        11,
        5323,
        3610,
        11,
        288,
        416,
        7433,
        2478,
        10761,
        2151,
        416,
        5283,
        51516
      ],
      "temperature": 0.0,
      "avg_logprob": -0.25508709696980264,
      "compression_ratio": 1.6764705882352942,
      "no_speech_prob": 0.06471599638462067
    },
    {
      "id": 41,
      "seek": 40892,
      "start": 408.92,
      "end": 415.92,
      "text": " parte del range, una cosa que puede ser muy interesante para iterar por ejemplo por diccionarios,",
      "tokens": [
        50364,
        6975,
        1103,
        3613,
        11,
        2002,
        10163,
        631,
        8919,
        816,
        5323,
        36396,
        1690,
        17138,
        289,
        1515,
        13358,
        1515,
        14285,
        10015,
        9720,
        11,
        50714
      ],
      "temperature": 0.0,
      "avg_logprob": -0.3563956210487767,
      "compression_ratio": 1.3391304347826087,
      "no_speech_prob": 0.08331339061260223
    },
    {
      "id": 42,
      "seek": 40892,
      "start": 415.92,
      "end": 420.72,
      "text": " o generar simplemente una secuencia de números enteros.",
      "tokens": [
        50714,
        277,
        1337,
        289,
        33190,
        2002,
        907,
        47377,
        368,
        36545,
        3242,
        329,
        13,
        50954
      ],
      "temperature": 0.0,
      "avg_logprob": -0.3563956210487767,
      "compression_ratio": 1.3391304347826087,
      "no_speech_prob": 0.08331339061260223
    }
  ],
  "language": "es"
}